STEP :

1. Adding Dependencies

2. We need to add Internet permission in our AndroidManifest.xml.

3. create a parent component activity_main.xml

4. create a child component list_item.xml (here set api output design)

5. create a model class for getter setter 

6. create a class named response & create arraylist here. 
   (link here model with arraylist)
   
7. create AsyncTask class. link here api data with response class

8. in MainActivity.java file link AsyncTask class

array with api: https://www.learn2crack.com/2013/11/listview-from-json-example.html

recycle with adapter : https://medium.com/android-grid/how-to-fetch-json-data-using-volley-and-put-it-to-recyclerview-android-studio-383059a12d1e


https://medium.com/@ritukanwarshekhawat687/fetch-data-from-json-api-parse-it-and-show-in-custom-listview-using-picasso-library-android-c22a0881b160

* ********************* RAW API FETCH


<uses-permission android:name="android.permission.INTERNET"></uses-permission>


* Now create AsyncTask thread. (thread is something that allow us to do multiple task.)	

  It have 3 method. on pre execute , Doing background (it will work for network call) & post execute (it will work when api call done). 

  String,String,String = param , progress , result





protected String doInBackground(String... strings) {

	HttpURLConnection httpURLConnection = null;
	BufferedReader bufferedReader = null;
	String name;
	Integer age;
	String description;
	try {
		URL url = new URL("https://sobujayon.com/api.json");
		
		// for use connection
		httpURLConnection = (HttpURLConnection) url.openConnection();
		
		// fetch data
		InputStream inputStream = httpURLConnection.getInputStream();
		
		// render data in string
		
		bufferedReader= new BufferedReader(new InputStreamReader(inputStream));
		StringBuffer stringBuffer=new StringBuffer();
		
		String line= "";
		StringBuffer lastBuffer = new StringBuffer();
		while((line=bufferedReader.readLine()) != null){

			stringBuffer.append(line);

		}
		String file = stringBuffer.toString();

		JSONObject fileObject1 = new JSONObject(file);

		JSONObject fileObject2 = new JSONObject(file);


		String status = fileObject1.getString("status");

		Log.d("data1",Boolean.toString(status == "success"));
		Log.d("data2",status);
		Log.d("data3","success");

		if(status == "success") {
			JSONArray jsonArray = fileObject2.getJSONArray("data");


			for(int i=0; i<jsonArray.length(); i++) {
				JSONObject arrayObject = jsonArray.getJSONObject(i);
				name = arrayObject.getString("employee_name");
				int salary = arrayObject.getInt("employee_salary");
				age = arrayObject.getInt("employee_age");

				lastBuffer.append(name+" "+salary+" "+age+"\n");
			}
			return  lastBuffer.toString();

		}

		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		} catch (JSONException e) {
			e.printStackTrace();
		} finally {
			httpURLConnection.disconnect();
			try {
				if(bufferedReader != null) {
					bufferedReader.close();
				}
			} catch (IOException e) {
				e.printStackTrace();
			}

		}
		return null;
}

@Override
protected void onPostExecute(String s) {
	super.onPostExecute(s);
	apiData.setText(s);
}





* ********************* VOLLEY API LIBRARY USE



    implementation 'com.android.volley:volley:1.1.0'
	


	For json perse follow this:
	
	https://stackoverflow.com/questions/9605913/how-do-i-parse-json-in-android
	
	
	
https://www.youtube.com/playlist?list=PLT3-dzFEBix1HZJFkMFEOw7e9hR0qUE0D
https://www.youtube.com/watch?v=jNa4nbb1Kac
https://www.youtube.com/watch?v=wzK19AaEgzk
https://www.youtube.com/watch?v=zkiGwNiSKLI
https://www.youtube.com/watch?v=7_fl-QtMi54
https://www.youtube.com/watch?v=sbI55IOiQdE